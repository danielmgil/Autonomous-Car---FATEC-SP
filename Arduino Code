/*This project is and autonomous car that follow tunnels and walls.*/


#include <UltrasonicHCSR04.h>

// definition of the dc motor controller l298n
const int IN1 = 1;
const int IN2 = 2;
const int ENA = 5;
const int IN3 = 3;
const int IN4 = 4;
const int ENB = 6;

// definition of the ultrasonic sensor pins
const int TRIG1 = 10;
const int ECHO1 = 11;

const int TRIG2 = 8;
const int ECHO2 = 9;

const int TRIG3 = 12;
const int ECHO3 = 13;

// definition of the sensors readings functions
UltrasonicHCSR04 sensor1(TRIG1, ECHO1);
UltrasonicHCSR04 sensor2(TRIG2, ECHO2);
UltrasonicHCSR04 sensor3(TRIG3, ECHO3);

void keep() {
  
  // keep a straight line
  analogWrite(ENA, 75);
  analogWrite(ENB, 75); 
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW); 
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW); 
}

void turnright(){

  // this is the function for the car to turn right if it detects a wall in his left side
  analogWrite(ENA, 70);
  analogWrite(ENB, 55);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void hiperturnright(){

  //this is the function that makes the car turn to the right in a 90 degree angle.
  analogWrite(ENA, 75);
  analogWrite(ENB, 0);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void hiperturnleft(){

  //this is the function that makes the car turn to the left in a 90 degree angle.
  analogWrite(ENA, 0);
  analogWrite(ENB, 75);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}


void turnleft(){

  // this is the function for the car to turn left if it detects a wall in his right side
  analogWrite(ENA, 55);
  analogWrite(ENB, 70);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  }


void stop(){ //this function stops the car
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
  digitalWrite(ENA, LOW);
  digitalWrite(ENB, LOW);
}

void setup() {
  // pinout configuration
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENB, OUTPUT);
  }

void loop(){

  //reading of the distances
  int  distancemiddle = sensor1.measureDistanceCM();
  int  distanceleft = sensor2.measureDistanceCM();
  int  distanceright = sensor3.measureDistanceCM();


  /*this part of the code is to compensate an issue in the repository, 
  when something touches the sensor it reads as the maximum value of the sensor. 
  So I define that if it is reading the maximum value, it turns into 1, 
  that way the car still continues if touches something.*/

  if(distancemiddle>700){
    distancemiddle=1;
  }
  if(distanceleft>700){
    distanceleft=1;
  }
  if(distanceright>700){
    distanceright=1;
  }


  if(distancemiddle>=17)  /*this parameter measures the distance in front of the car, 
  and if it detects a wall it make the hiperturns.*/
  {
   if(distanceright<=15){ //condition for the car to turn left if detects a wall in the right side
      turnleft();
      }
      
   else if(distanceleft<=15){ //condition for the car to turn right if detects a wall in the left side
      turnright();
    }
    
   else
    keep(); //if not detect walls, keep in a straigth line
  }
  else { //this part makes the hiperturns, it detects where the open part of the curve is and turns.
   stop();
   if(distanceleft>=distanceright){
    hiperturnleft();
   }
   if(distanceright>=distanceleft){
    hiperturnright();
   }

  }
 
}
